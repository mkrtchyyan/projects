CREATE OR REPLACE PROCEDURE BL_CL.LOAD_CE_CUSTOMERS_SCD()
LANGUAGE PLPGSQL
AS $$
DECLARE
  ROWS_UPDATED INTEGER := 0;
  ROWS_INSERTED INTEGER := 0;
BEGIN
  CREATE TEMP TABLE IF NOT EXISTS TEMP_CE_CUSTOMERS_SCD (
    "CUSTOMER_SRC_ID" BIGINT,
    "CUSTOMER_FIRST_NAME" VARCHAR(255),
    "CUSTOMER_LAST_NAME" VARCHAR(255),
    "COUNTRY_ID" BIGINT,
    "LOYALTY_MEMBER" BOOLEAN,
    "LOYALTY_DISCOUNT" DECIMAL(8,2),
    "GENDER" VARCHAR(255),
    "BIRTH_YEAR" BIGINT,
    "SIGNUP_DT" DATE,
    "SOURCE_SYSTEM" VARCHAR(255),
    "SOURCE_ENTITY" VARCHAR(255)
  );
   truncate temp_ce_customers_scd ;


	with all_customers as (
						select distinct
						ons."CUSTOMER_ID" AS "CUSTOMER_SRC_ID",
					    ons."CUSTOMER_FIRST_NAME" AS "CUSTOMER_FIRST_NAME",
					    ons."CUSTOMER_LAST_NAME" AS "CUSTOMER_LAST_NAME",
					    ons."CUSTOMER_COUNTRY" AS "CUSTOMER_COUNTRY",
					    ons."LOYALTY_MEMBER" AS "LOYALTY_MEMBER",
					    ons."LOYALTY_DISCOUNT" AS "LOYALTY_DISCOUNT",
					    ons."GENDER" AS "GENDER",
					    ons."BIRTH_YEAR" AS "BIRTH_YEAR",
					    ons."SIGNUP_DT"  AS "SIGNUP_DT",
					    ons."EVENT_DT" AS "EVENT_DT",
					    'SA_ONLINE_SALES' AS "SOURCE_SYSTEM",
					    'SRC_ONLINE_COFFEE_SHOP_TRANSACTIONS' AS "SOURCE_ENTITY"
						FROM SA_ONLINE_SALES.SRC_ONLINE_COFFEE_SHOP_TRANSACTIONS  ons
						union all
						select distinct 
						ofs."CUSTOMER_ID" AS "CUSTOMER_SRC_ID",
					    ofs."CUSTOMER_FIRST_NAME" AS "CUSTOMER_FIRST_NAME",
					    ofs."CUSTOMER_LAST_NAME" AS "CUSTOMER_LAST_NAME",
					    ofs."CUSTOMER_COUNTRY" AS "CUSTOMER_COUNTRY",
					    ofs."LOYALTY_MEMBER" AS "LOYALTY_MEMBER",
					    ofs."LOYALTY_DISCOUNT" AS "LOYALTY_DISCOUNT",
					    ons."GENDER" AS "GENDER",
					    ons."BIRTH_YEAR" AS "BIRTH_YEAR",
					    NULL AS "SIGNUP_DT",
					    ofs."EVENT_DT" AS "EVENT_DT",
					    'SA_OFFLINE_SALES' AS "SOURCE_SYSTEM",
					    'SRC_OFFLINE_COFFEE_SHOP_TRANSACTIONS' AS "SOURCE_ENTITY"
						FROM SA_OFFLINE_SALES.SRC_OFFLINE_COFFEE_SHOP_TRANSACTIONS ofs
						left join (select distinct "CUSTOMER_ID","GENDER","BIRTH_YEAR"
								   from SA_ONLINE_SALES.SRC_ONLINE_COFFEE_SHOP_TRANSACTIONS) ons
						on ofs."CUSTOMER_ID"=ons."CUSTOMER_ID"),
mapping_joined as (select  distinct
						  M."CUSTOMER_ID" AS "CUSTOMER_ID",
					      M."CUSTOMER_FIRST_NAME" as "CUSTOMER_FIRST_NAME",
					      M."CUSTOMER_LAST_NAME" as "CUSTOMER_LAST_NAME",
					      S."CUSTOMER_COUNTRY" as "CUSTOMER_COUNTRY",
					      S."LOYALTY_MEMBER" as "LOYALTY_MEMBER",
					      S."LOYALTY_DISCOUNT" as "LOYALTY_DISCOUNT",
					      S."GENDER" as "GENDER",
					      S."BIRTH_YEAR" as "BIRTH_YEAR",
					      S."SIGNUP_DT" as "SIGNUP_DT",
						  S."EVENT_DT" as "EVENT_DT",
					      S."SOURCE_SYSTEM" as "SOURCE_SYSTEM",
					      S."SOURCE_ENTITY" as "SOURCE_ENTITY"
					from all_customers S
					 LEFT JOIN BL_CL.T_MAP_CUSTOMERS M
				      ON S."CUSTOMER_SRC_ID" = M."CUSTOMER_SRC_ID"
				     AND S."SOURCE_SYSTEM" = M."SOURCE_SYSTEM"
				     AND S."SOURCE_ENTITY" = M."SOURCE_ENTITY"),		
	latest_customers AS (select *, 
						row_number() over(partition by "CUSTOMER_ID" ORDER BY "EVENT_DT" DESC) as rn
  						from mapping_joined)

  INSERT INTO TEMP_CE_CUSTOMERS_SCD (
    "CUSTOMER_SRC_ID", "CUSTOMER_FIRST_NAME", "CUSTOMER_LAST_NAME", "COUNTRY_ID",
    "LOYALTY_MEMBER", "LOYALTY_DISCOUNT", "GENDER", "BIRTH_YEAR", "SIGNUP_DT",
    "SOURCE_SYSTEM", "SOURCE_ENTITY")
  SELECT distinct 
    C."CUSTOMER_ID",
    C."CUSTOMER_FIRST_NAME",
    C."CUSTOMER_LAST_NAME",
    COALESCE(CNT."COUNTRY_ID", -1),
    C."LOYALTY_MEMBER"::BOOLEAN,
    C."LOYALTY_DISCOUNT"::DECIMAL(8,2),
    coalesce(C."GENDER",'n.a.'),
    coalesce(C."BIRTH_YEAR"::BIGINT,-1),
    COALESCE(TO_DATE(C."SIGNUP_DT", 'MM/DD/YYYY'), DATE '1900-01-01'),
    'BL_CL',
    'T_MAP_CUSTOMERS'
  FROM (
    SELECT distinct
      S."CUSTOMER_ID",
      S."CUSTOMER_FIRST_NAME",
      S."CUSTOMER_LAST_NAME",
      S."CUSTOMER_COUNTRY",
      S."LOYALTY_MEMBER",
      S."LOYALTY_DISCOUNT",
      S."GENDER",
      S."BIRTH_YEAR",
      S."SIGNUP_DT",
      S."SOURCE_SYSTEM",
      S."SOURCE_ENTITY"
    FROM latest_customers S
    where rn =1
  ) C
  LEFT JOIN BL_3NF.CE_COUNTRIES CNT
    ON CNT."COUNTRY_DESC" = C."CUSTOMER_COUNTRY"
   AND CNT."SOURCE_SYSTEM" = C."SOURCE_SYSTEM"
   AND CNT."SOURCE_ENTITY" = C."SOURCE_ENTITY";

 WITH changed_customers AS (
    SELECT tgt.*
    FROM BL_3NF.CE_CUSTOMERS_SCD tgt
    JOIN TEMP_CE_CUSTOMERS_SCD src
      ON tgt."CUSTOMER_SRC_ID" = src."CUSTOMER_SRC_ID"
     AND tgt."SOURCE_SYSTEM" = src."SOURCE_SYSTEM"
     AND tgt."SOURCE_ENTITY" = src."SOURCE_ENTITY"
     AND  tgt."IS_ACTIVE" = TRUE
      AND tgt."END_DT" = '9999-12-31'::TIMESTAMP
      WHERE (
        tgt."CUSTOMER_SRC_ID" IS DISTINCT FROM src."CUSTOMER_SRC_ID" OR
        tgt."CUSTOMER_FIRST_NAME" IS DISTINCT FROM src."CUSTOMER_FIRST_NAME"
        OR tgt."CUSTOMER_LAST_NAME" IS DISTINCT FROM src."CUSTOMER_LAST_NAME"
        OR tgt."COUNTRY_ID" IS DISTINCT FROM src."COUNTRY_ID"
        OR tgt."LOYALTY_MEMBER" IS DISTINCT FROM src."LOYALTY_MEMBER"
        OR tgt."LOYALTY_DISCOUNT" IS DISTINCT FROM src."LOYALTY_DISCOUNT"
        OR tgt."GENDER" IS DISTINCT FROM src."GENDER"
        OR tgt."BIRTH_YEAR" IS DISTINCT FROM src."BIRTH_YEAR"
        OR tgt."SIGNUP_DT" IS DISTINCT FROM src."SIGNUP_DT"
      )
  )
  UPDATE BL_3NF.CE_CUSTOMERS_SCD tgt
  SET "IS_ACTIVE" = FALSE,
      "END_DT" = CURRENT_TIMESTAMP
  FROM changed_customers cc
  WHERE tgt."CUSTOMER_SRC_ID" = cc."CUSTOMER_SRC_ID"
    AND tgt."IS_ACTIVE" = TRUE
    AND tgt."END_DT" = '9999-12-31'::TIMESTAMP;

  GET DIAGNOSTICS ROWS_UPDATED = ROW_COUNT;

  WITH to_insert AS (
    SELECT distinct src.*
    FROM TEMP_CE_CUSTOMERS_SCD src
    LEFT JOIN BL_3NF.CE_CUSTOMERS_SCD tgt
      ON tgt."CUSTOMER_SRC_ID" = src."CUSTOMER_SRC_ID"
     AND tgt."SOURCE_SYSTEM" = src."SOURCE_SYSTEM"
     AND tgt."SOURCE_ENTITY" = src."SOURCE_ENTITY"
     AND tgt."END_DT" = '9999-12-31'::TIMESTAMP
     AND tgt."CUSTOMER_FIRST_NAME" = src."CUSTOMER_FIRST_NAME"
     AND tgt."CUSTOMER_LAST_NAME" = src."CUSTOMER_LAST_NAME"
     AND tgt."COUNTRY_ID" = src."COUNTRY_ID"
     AND tgt."LOYALTY_MEMBER" = src."LOYALTY_MEMBER"
     AND tgt."LOYALTY_DISCOUNT" = src."LOYALTY_DISCOUNT"
     AND tgt."GENDER" = src."GENDER"
     AND tgt."BIRTH_YEAR" = src."BIRTH_YEAR"
     AND tgt."SIGNUP_DT" = src."SIGNUP_DT"
    WHERE tgt."CUSTOMER_ID" IS NULL --No active row in the target matches this exact source row  so we should insert it
  )
  INSERT INTO BL_3NF.CE_CUSTOMERS_SCD (
    "CUSTOMER_ID",
    "CUSTOMER_SRC_ID",
    "CUSTOMER_FIRST_NAME",
    "CUSTOMER_LAST_NAME",
    "COUNTRY_ID",
    "LOYALTY_MEMBER",
    "LOYALTY_DISCOUNT",
    "GENDER",
    "BIRTH_YEAR",
    "SIGNUP_DT",
    "START_DT",
    "END_DT",
    "IS_ACTIVE",
    "TA_INSERT_DT",
    "SOURCE_SYSTEM",
    "SOURCE_ENTITY"
  )
  SELECT
    NEXTVAL('BL_3NF.CE_CUSTOMERS_SEQ'),
    i."CUSTOMER_SRC_ID",
    i."CUSTOMER_FIRST_NAME",
    i."CUSTOMER_LAST_NAME",
    i."COUNTRY_ID",
    i."LOYALTY_MEMBER",
    i."LOYALTY_DISCOUNT",
    i."GENDER",
    i."BIRTH_YEAR",
    i."SIGNUP_DT",
    CURRENT_TIMESTAMP,
    '9999-12-31'::TIMESTAMP,
    TRUE,
    CURRENT_TIMESTAMP,
    'BL_CL',
    'T_MAP_CUSTOMERS'
  FROM to_insert i;

  GET DIAGNOSTICS ROWS_INSERTED= ROW_COUNT;
  call  BL_CL.LOG_ETL(  'LOAD_CE_CUSTOMERS_SCD', ROWS_UPDATED + ROWS_INSERTED,   'SUCCESS' );

EXCEPTION WHEN OTHERS THEN
  call  BL_CL.LOG_ETL('LOAD_CE_CUSTOMERS_SCD', 0, 'ERROR: ' || SQLERRM);
  RAISE;
END;
$$;
