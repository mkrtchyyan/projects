CREATE TABLE IF NOT EXISTS BL_CL.t_map_products (
    "PRODUCT_ID" BIGINT NOT NULL,
    "PRODUCT_SRC_ID" VARCHAR(1000) NOT NULL,
    "PRODUCT_SRC_DESC" VARCHAR(1000) NOT NULL,
    "PRODUCT_DESC"  VARCHAR(1000) NOT NULL,
    "SOURCE_SYSTEM" VARCHAR(1000) NOT NULL,
    "SOURCE_ENTITY" VARCHAR(1000) NOT NULL);
WITH all_products AS (
  SELECT DISTINCT
    "PRODUCT_ID" AS "PRODUCT_SRC_ID",
    "PRODUCT_DESC" AS "PRODUCT_SRC_DESC",
    TRIM(UPPER("PRODUCT_DESC")) AS "norm_desc",
    "EVENT_DT"::bigint,
    'SA_ONLINE_SALES' AS "SOURCE_SYSTEM",
    'SRC_ONLINE_COFFEE_SHOP_TRANSACTIONS' AS "SOURCE_ENTITY"
  FROM sa_online_sales.src_online_coffee_shop_transactions
  UNION ALL
  SELECT DISTINCT
    "PRODUCT_ID" AS "PRODUCT_SRC_ID",
    "PRODUCT_DESC" AS "PRODUCT_SRC_DESC",
    TRIM(UPPER("PRODUCT_DESC")) AS "norm_desc",
    "EVENT_DT"::bigint,
    'SA_OFFLINE_SALES' AS "SOURCE_SYSTEM",
    'SRC_OFFLINE_COFFEE_SHOP_TRANSACTIONS' AS "SOURCE_ENTITY"
  FROM sa_offline_sales.src_offline_coffee_shop_transactions),
latest_products AS (SELECT *,ROW_NUMBER() over(PARTITION BY "PRODUCT_SRC_ID","SOURCE_SYSTEM","SOURCE_ENTITY" ORDER BY "EVENT_DT" DESC ) AS rn FROM all_products),
assigned_ids AS ( SELECT  ROW_NUMBER() OVER (ORDER BY "PRODUCT_SRC_ID") AS "PRODUCT_ID",  "PRODUCT_SRC_ID"
  FROM (  SELECT DISTINCT "PRODUCT_SRC_ID" FROM latest_products ) AS unique_products)
INSERT INTO BL_CL.t_map_products (
  "PRODUCT_ID",
  "PRODUCT_SRC_ID",
  "PRODUCT_SRC_DESC",
  "PRODUCT_DESC",
  "SOURCE_SYSTEM",
  "SOURCE_ENTITY")
SELECT
  aid."PRODUCT_ID",
  src."PRODUCT_SRC_ID",
  src."PRODUCT_SRC_DESC",
  upper(src."norm_desc") AS "PRODUCT_DESC",
  src."SOURCE_SYSTEM",
  src."SOURCE_ENTITY"
FROM latest_products src
JOIN assigned_ids aid
  ON src."PRODUCT_SRC_ID" = aid."PRODUCT_SRC_ID"
WHERE rn=1 AND NOT EXISTS(SELECT 1 FROM  BL_CL.t_map_products WHERE "PRODUCT_SRC_ID"=src."PRODUCT_SRC_ID");
