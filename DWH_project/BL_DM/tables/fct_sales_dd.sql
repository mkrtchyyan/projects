CREATE SEQUENCE IF NOT EXISTS BL_DM.FCT_SALES_DD_SEQ START 1;
CREATE TABLE IF NOT EXISTS BL_DM.FCT_SALES_DD(
"SALE_SURR_ID" BIGINT ,
"SALE_ID" VARCHAR(100) NOT NULL, 
"SALE_SOURCE_ID" BIGINT NOT NULL,
"CUSTOMER_ID" BIGINT NOT NULL,
"STAFF_ID" BIGINT NOT NULL,
"STORE_ID" BIGINT NOT NULL,
"PAYMENT_ID" BIGINT NOT NULL,
"MANAGER_ID" BIGINT NOT NULL,
"PRODUCT_ID" BIGINT NOT NULL,
"EVENT_DT" BIGINT NOT NULL,
"QUANTITY" INT NOT NULL,
"LINE_ITEM_AMOUNT" DECIMAL(8,2) NOT NULL,
"COST" DECIMAL(8,2) NOT NULL,
"PROFIT" DECIMAL(8,2) NOT NULL,
"PROFIT_MARGIN" DECIMAL(8,2) NOT NULL,
"DELIVERY_FEE" DECIMAL(8,2) NOT NULL,
"TA_INSERT_DT" TIMESTAMP NOT NULL,
"TA_UPDATE_DT" TIMESTAMP NOT NULL,
"SOURCE_SYSTEM" VARCHAR(150) NOT NULL,
"SOURCE_ENTITY" VARCHAR(150) NOT NULL,
FOREIGN KEY("CUSTOMER_ID") REFERENCES BL_DM.DIM_CUSTOMERS_SCD("CUSTOMER_SURR_ID"),
FOREIGN KEY("STAFF_ID") REFERENCES BL_DM.DIM_STAFF("STAFF_SURR_ID"),
FOREIGN KEY("STORE_ID") REFERENCES BL_DM.DIM_STORES("STORE_SURR_ID"),
FOREIGN KEY("MANAGER_ID") REFERENCES BL_DM.DIM_STAFF("STAFF_SURR_ID"),
FOREIGN KEY("PAYMENT_ID") REFERENCES BL_DM.DIM_PAYMENTS("PAYMENT_SURR_ID"),
FOREIGN KEY("PRODUCT_ID") REFERENCES BL_DM.DIM_PRODUCTS("PRODUCT_SURR_ID"),
CONSTRAINT PK_SURR_ID_EVENT_DT PRIMARY KEY ( "SALE_SURR_ID", "EVENT_DT" )
) PARTITION BY RANGE ("EVENT_DT");
COMMIT;
ALTER TABLE IF EXISTS BL_DM.FCT_SALES_DD
DROP CONSTRAINT IF EXISTS unique_sales_source_triplet_event_dt;
ALTER TABLE IF EXISTS BL_DM.FCT_SALES_DD
ADD CONSTRAINT unique_sales_source_triplet_event_dt
UNIQUE("EVENT_DT","SALE_SOURCE_ID","SOURCE_SYSTEM","SOURCE_ENTITY");
COMMIT;
--DEFAULT ROW
INSERT INTO BL_DM.FCT_SALES_DD
	SELECT  -1,'n.a.','n.a.',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,'1900-01-01'::timestamp,'1900-01-01'::timestamp,'MANUAL','MANUAL'
	WHERE NOT EXISTS(SELECT 1 FROM BL_DM.FCT_SALES_DD WHERE "SALE_SURR_ID"=-1);
